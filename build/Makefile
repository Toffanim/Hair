# GNU Make project makefile autogenerated by Premake
ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifndef CC
  CC = gcc
endif

ifndef CXX
  CXX = g++
endif

ifndef AR
  AR = ar
endif

ifeq ($(config),debug)
  OBJDIR     = obj/Debug
  TARGETDIR  = ..
  TARGET     = $(TARGETDIR)/demo_d
  DEFINES   += -DGLEW_STATIC -DDEBUG
  INCLUDES  += -I../lib/glfw/include -I../src -I../common -I../lib
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -Wall -g -std=c++11 -Wall
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -L../bin/debug
  LIBS      += -limgui -lglfw -lglew -lstb -lX11 -lXrandr -lXi -lXxf86vm -lrt -lGL -lGLU -lpthread -lassimp
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../bin/debug/libimgui.a ../bin/debug/libglfw.a ../bin/debug/libglew.a ../bin/debug/libstb.a
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR     = obj/Release
  TARGETDIR  = ../bin/release
  TARGET     = $(TARGETDIR)/demo
  DEFINES   += -DGLEW_STATIC -DNDEBUG
  INCLUDES  += -I../lib/glfw/include -I../src -I../common -I../lib
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -std=c++11 -Wall
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -L../bin/release
  LIBS      += -limgui -lglfw -lglew -lstb -lX11 -lXrandr -lXi -lXxf86vm -lrt -lGL -lGLU -lpthread -lassimp
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../bin/release/libimgui.a ../bin/release/libglfw.a ../bin/release/libglew.a ../bin/release/libstb.a
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug64)
  OBJDIR     = obj/x64/Debug
  TARGETDIR  = ..
  TARGET     = $(TARGETDIR)/demo_d
  DEFINES   += -DGLEW_STATIC -DDEBUG
  INCLUDES  += -I../lib/glfw/include -I../src -I../common -I../lib
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -Wall -g -m64 -std=c++11 -Wall
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -m64 -L/usr/lib64 -L../bin/debug
  LIBS      += -limgui -lglfw -lglew -lstb -lX11 -lXrandr -lXi -lXxf86vm -lrt -lGL -lGLU -lpthread -lassimp
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../bin/debug/libimgui.a ../bin/debug/libglfw.a ../bin/debug/libglew.a ../bin/debug/libstb.a
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release64)
  OBJDIR     = obj/x64/Release
  TARGETDIR  = ../bin/release
  TARGET     = $(TARGETDIR)/demo
  DEFINES   += -DGLEW_STATIC -DNDEBUG
  INCLUDES  += -I../lib/glfw/include -I../src -I../common -I../lib
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -m64 -std=c++11 -Wall
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -m64 -L/usr/lib64 -L../bin/release
  LIBS      += -limgui -lglfw -lglew -lstb -lX11 -lXrandr -lXi -lXxf86vm -lrt -lGL -lGLU -lpthread -lassimp
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../bin/release/libimgui.a ../bin/release/libglfw.a ../bin/release/libglew.a ../bin/release/libstb.a
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug32)
  OBJDIR     = obj/x32/Debug
  TARGETDIR  = ..
  TARGET     = $(TARGETDIR)/demo_d
  DEFINES   += -DGLEW_STATIC -DDEBUG
  INCLUDES  += -I../lib/glfw/include -I../src -I../common -I../lib
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -Wall -g -m32 -std=c++11 -Wall
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -m32 -L/usr/lib32 -L../bin/debug
  LIBS      += -limgui -lglfw -lglew -lstb -lX11 -lXrandr -lXi -lXxf86vm -lrt -lGL -lGLU -lpthread -lassimp
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../bin/debug/libimgui.a ../bin/debug/libglfw.a ../bin/debug/libglew.a ../bin/debug/libstb.a
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release32)
  OBJDIR     = obj/x32/Release
  TARGETDIR  = ../bin/release
  TARGET     = $(TARGETDIR)/demo
  DEFINES   += -DGLEW_STATIC -DNDEBUG
  INCLUDES  += -I../lib/glfw/include -I../src -I../common -I../lib
  CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
  CFLAGS    += $(CPPFLAGS) $(ARCH) -O2 -m32 -std=c++11 -Wall
  CXXFLAGS  += $(CFLAGS) 
  LDFLAGS   += -s -m32 -L/usr/lib32 -L../bin/release
  LIBS      += -limgui -lglfw -lglew -lstb -lX11 -lXrandr -lXi -lXxf86vm -lrt -lGL -lGLU -lpthread -lassimp
  RESFLAGS  += $(DEFINES) $(INCLUDES) 
  LDDEPS    += ../bin/release/libimgui.a ../bin/release/libglfw.a ../bin/release/libglew.a ../bin/release/libstb.a
  LINKCMD    = $(CXX) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(ARCH) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJECTS := \
	$(OBJDIR)/Skybox.o \
	$(OBJDIR)/Controller.o \
	$(OBJDIR)/Utils.o \
	$(OBJDIR)/Game.o \
	$(OBJDIR)/Player.o \
	$(OBJDIR)/Main.o \
	$(OBJDIR)/Camera.o \
	$(OBJDIR)/Actor.o \
	$(OBJDIR)/ModelManager.o \
	$(OBJDIR)/Manager.o \
	$(OBJDIR)/ControllerManager.o \
	$(OBJDIR)/Mesh.o \
	$(OBJDIR)/Model.o \
	$(OBJDIR)/PostFX.o \
	$(OBJDIR)/Shader.o \

RESOURCES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

.PHONY: clean prebuild prelink

all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking demo
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning demo
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH)
	@echo $(notdir $<)
	-$(SILENT) cp $< $(OBJDIR)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
endif

$(OBJDIR)/Skybox.o: ../src/skybox/Skybox.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Controller.o: ../src/controller/Controller.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Utils.o: ../src/utils/Utils.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Game.o: ../src/game/Game.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Player.o: ../src/player/Player.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Main.o: ../src/main/Main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Camera.o: ../src/camera/Camera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Actor.o: ../src/actor/Actor.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ModelManager.o: ../src/managers/ModelManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Manager.o: ../src/managers/Manager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/ControllerManager.o: ../src/managers/ControllerManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Mesh.o: ../src/mesh/Mesh.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Model.o: ../src/mesh/Model.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/PostFX.o: ../src/postFX/PostFX.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"
$(OBJDIR)/Shader.o: ../src/shader/Shader.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(CXXFLAGS) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
